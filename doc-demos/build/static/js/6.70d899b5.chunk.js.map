{"version":3,"sources":["pages/CodeScript lazy /^.*$/ groupOptions: {} namespace object","components/MarkdownViewer.js","components/Block.js","components/CodeViewer.js","pages/CodeScript/index.js","pages/CodeScript/str.js"],"names":["map",".","./","./Modal","./Modal.js","./Test","./Test.js","./index","./index.js","./str","./str.js","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","keys","Object","module","exports","MarkdownViewer","_ref","text","react_default","a","createElement","react_markdown_default","source","Block","children","style","border","padding","marginBottom","PrismLight","registerLanguage","jsx","CodeViewer","codeString","prism_light","language","darcula","lazyExample","time","path","lazy","setTimeout","concat","Modal","Test","TestFour","CodeScript","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","showModal","_this2","MarkdownViewer_MarkdownViewer","markdownText","Block_Block","react","fallback","CodeViewer_CodeViewer","code1","code2","code3","onClick","setState","prevState","code4","PureComponent","r","__webpack_exports__","d"],"mappings":"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","file":"static/js/6.70d899b5.chunk.js","sourcesContent":["var map = {\n\t\".\": [\n\t\t36\n\t],\n\t\"./\": [\n\t\t36\n\t],\n\t\"./Modal\": [\n\t\t56,\n\t\t0\n\t],\n\t\"./Modal.js\": [\n\t\t56,\n\t\t0\n\t],\n\t\"./Test\": [\n\t\t57,\n\t\t1\n\t],\n\t\"./Test.js\": [\n\t\t57,\n\t\t1\n\t],\n\t\"./index\": [\n\t\t36\n\t],\n\t\"./index.js\": [\n\t\t36\n\t],\n\t\"./str\": [\n\t\t43\n\t],\n\t\"./str.js\": [\n\t\t43\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 169;\nmodule.exports = webpackAsyncContext;","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\n\nexport const MarkdownViewer = ({ text }) => <ReactMarkdown source={text} />;\n","import React from \"react\";\n\nexport const Block = ({ children }) => {\n  return (\n    <div\n      style={{\n        border: \"1px solid black\",\n        padding: \"32px\",\n        marginBottom: \"20px\"\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n","import React from \"react\";\nimport PrismLight from \"react-syntax-highlighter/dist/esm/prism-light\";\nimport { darcula } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport jsx from \"react-syntax-highlighter/dist/esm/languages/prism/jsx\";\nPrismLight.registerLanguage(\"jsx\", jsx);\n\nexport const CodeViewer = ({ codeString }) => {\n  return (\n    <PrismLight language=\"jsx\" style={darcula}>\n      {codeString}\n    </PrismLight>\n  );\n};\n","import React, { Suspense, lazy, PureComponent } from \"react\";\nimport { MarkdownViewer } from \"../../components/MarkdownViewer\";\nimport { Block } from \"../../components/Block\";\nimport { CodeViewer } from \"../../components/CodeViewer\";\nimport { markdownText, code1, code2, code3, code4 } from \"./str\";\n\nconst lazyExample = (time, path) =>\n  lazy(\n    () =>\n      new Promise(resolve => {\n        setTimeout(() => {\n          resolve(import(`${path}`));\n        }, time);\n      })\n  );\n\nconst Modal = lazyExample(2000, \"./Modal\");\n\nconst Test = lazyExample(2000, \"./Test\");\n\nconst TestFour = lazyExample(4000, \"./Test\");\n\nclass CodeScript extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false\n    };\n  }\n  render() {\n    const { showModal } = this.state;\n    return (\n      <div>\n        <MarkdownViewer text={markdownText} />\n        <Block>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Test />\n          </Suspense>\n          <CodeViewer codeString={code1} />\n        </Block>\n        <Block>\n          <Suspense\n            fallback={\n              <div>\n                加载 2 个异步组件(可以和上面的组件做对比，上面的 2 秒，这里的 4\n                秒)\n              </div>\n            }\n          >\n            <Test />\n            <TestFour />\n          </Suspense>\n          <CodeViewer codeString={code2} />\n        </Block>\n        <Block>\n          在 Route 中使用代码分割\n          <CodeViewer codeString={code3} />\n        </Block>\n        <Block>我们还可以通过一个按钮来触发加载组件的动作</Block>\n        <div>\n          <button\n            onClick={() =>\n              this.setState(prevState => ({ showModal: !prevState.showModal }))\n            }\n          >\n            点击加载组件，可以看到 network 的请求\n          </button>\n          <Suspense fallback={<div>loading</div>}>\n            {showModal && <Modal />}\n          </Suspense>\n        </div>\n        <CodeViewer codeString={code4} />\n      </div>\n    );\n  }\n}\n\nexport { CodeScript as default };\n","export const markdownText = `\n  代码分割是 \\`webpack\\` 所提供了一种能力，可以让模块生成独立的 JS 文件，\n  主要是为了减小 \\`bundle.js\\` 的体积，所以各个框架都有提供组件动态加载的写法。\n  \n  在 React 中，我们可以使用 \\`React.lazy\\` 来动态加载一个组件，比如我们下面有一个组件，它会在页面加载的 2 秒之后再加载进来。\n  \n  不过 React.lazy 似乎一定要搭配 \\`Suspense\\`, 不然 React 会报错。\n  \n  \\`Suspense\\` 中可以放多个异步组件，是等所有异步组件都加载完成了，\\`fallback\\` 才会消失。\n  **另外我们引入的是同一个组件，也就是说是同一份 js, 所以我们并不会重复请求。**\n  \n  路由功能是非常值得做代码分割的。这个 Demos 里刚好有 \\`react-router-dom\\` 库，所以你在切换路由的时候，可以看到短暂的 Loading.\n  \n  **要注意：React.lazy 只支持 default 导出。**\n`;\n\nexport const code1 = `\nconst Test = lazy(\n  () =>\n    new Promise(resolve => {\n      setTimeout(() => {\n        resolve(import(\"./Test\"));\n      }, 2000);\n    })\n);\n\n<Suspense fallback={<div>Loading...</div>}>\n  <Test />\n</Suspense>\n`;\n\nexport const code2 = `\nconst lazyExample = time =>\n  lazy(\n    () =>\n      new Promise(resolve => {\n        setTimeout(() => {\n          resolve(import(\"./Test\"));\n        }, time);\n      })\n  );\n\nconst Test = lazyExample(2000);\n\nconst TestFour = lazyExample(4000);\n<Suspense fallback={<div>加载 2 个异步组件</div>}>\n  <Test />\n  <TestFour />\n</Suspense>\n`;\n\nexport const code3 = `\nconst routesConfig = [\n  {\n    path: \"/codeScript/\",\n    name: \"代码分割\",\n    component: lazy(() => import(\"./pages/CodeScript\"))\n  },\n  {\n    path: \"/context/\",\n    name: \"Context\",\n    component: lazy(() => import(\"./pages/Context\"))\n  }\n];\n<Suspense fallback={<div>加载路由中~~~~~~~...</div>}>\n  {routesConfig.map(({ path, component }) => {\n    return <Route key={path} path={path} exact component={component} />\n  })}\n</Suspense>\n`;\n\nexport const code4 = `\nconst lazyExample = (time, path) =>\n  lazy(\n    () =>\n      new Promise(resolve => {\n        setTimeout(() => {\n          resolve(import(\\`\\${path}\\`));\n        }, time);\n      })\n  );\n\nconst Modal = lazyExample(2000, \"./Modal\");\n\n// showModal 默认是 false\n\n <div>\n  <button\n    onClick={() =>\n      this.setState(prevState => ({ showModal: !prevState.showModal }))\n    }\n  >\n    点击加载组件，可以看到 network 的请求\n  </button>\n  <Suspense fallback={<div>loading</div>}>\n    {showModal && <Modal />}\n  </Suspense>\n</div>\n`;\n"],"sourceRoot":""}