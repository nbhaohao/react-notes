(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{25:function(n,e,t){"use strict";t.r(e),t.d(e,"mdText",function(){return o}),t.d(e,"code1",function(){return r}),t.d(e,"code2",function(){return u}),t.d(e,"code3",function(){return c});var o="\nContext \u6211\u4eec\u5e73\u5e38\u53ef\u80fd\u6bd4\u8f83\u5c11\u7528\uff0c\u4f46\u5047\u5982\u6211\u4eec\u6709\u7528 `react-redux` \u5e93\u7684\u8bdd\uff0c\u6211\u4eec\u5176\u5b9e\u5c31\u5df2\u7ecf\u5229\u7528\u4e86 Context \u8fd9\u4e2a\u7279\u6027\u4e86\u3002\n\n`Provider` \u63a5\u6536\u4e00\u4e2a `store` \u4f5c\u4e3a\u53c2\u6570\uff0c\u7136\u540e\u5b83\u901a\u8fc7 Context \u4f20\u9012\uff0c\u4e4b\u540e `connect` \u8fd9\u4e2a\u9ad8\u9636\u7ec4\u4ef6\u91cc\u5c31\u53ef\u4ee5\u83b7\u53d6\u5230 `store` \u7684\u503c\u4e86\u3002\n\n",r='\n// \'tomato\' \u662f\u6211\u4eec\u7684\u9ed8\u8ba4\u503c\n// \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 ThemeContext.Provider \u6765\u8986\u76d6\u5b83\nconst ThemeContext = React.createContext("tomato");\n\nclass Button extends PureComponent {\n  static contextType = ThemeContext;\n\n  render() {\n    return (\n      <button style={{ color: this.context }}>\n        \u6211\u901a\u8fc7 context \u62ff\u5230\u4e86 theme \u503c\n      </button>\n    );\n  }\n}\n\nconst Header = () => (\n  <div>\n    \u6211\u5e76\u4e0d\u9700\u8981\u5c06 theme \u5c5e\u6027\u4f20\u9012\u7ed9 Button \u7ec4\u4ef6\uff0c\u5b83\u81ea\u5df1\u5c31\u53ef\u4ee5\u62ff\u5230\n    <Button />\n  </div>\n);\n\nconst Context = () => (\n  <div>\n    <ThemeContext.Provider value="blue">\n      <Header />\n    </ThemeContext.Provider>\n  </div>\n)\n\n',u="\n// \u5916\u5c42\u5df2\u7ecf\u58f0\u660e\u4e86 ThemeContext.Provider\n// Consumer \u4e2d\u53ea\u80fd\u5305\u542b\u51fd\u6570\uff0c\u4e14\u53ea\u80fd\u5305\u542b\u4e00\u4e2a\u7ec4\u4ef6\uff0c\n\nconst HeaderFunctional = ({ theme }) => {\n  return (\n    <div style={{ color: theme }}>\n      \u6211\u867d\u7136\u662f\u51fd\u6570\u5f0f\u7ec4\u4ef6\uff0c\u4f46\u6211\u4ecd\u7136\u62ff\u5230\u4e86{theme}\n    </div>\n  );\n};\n\n <ThemeContext.Consumer>\n  {value => <HeaderFunctional theme={value} />}\n </ThemeContext.Consumer>\n",c='\n  constructor(props) {\n    super(props);\n    this.state = {\n      themeContext: "blue"\n    };\n  }\n  \n  handleChangeThemeContext = () => {\n    const { themeContext } = this.state;\n    this.setState({\n      themeContext: themeContext === "blue" ? "red" : "blue"\n    });\n  };\n\n  \n  <ThemeContext.Provider value={themeContext}>\n    {\'....\'}\n    <button onClick={this.handleChangeThemeContext}>\n      \u4fee\u6539 context \u7684\u503c\u3002\n    </button>\n  </ThemeContext.Provider>\n\n'}}]);
//# sourceMappingURL=8.223dea71.chunk.js.map