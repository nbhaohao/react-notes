{"version":3,"sources":["pages/ErrorBoundaries/index.js","pages/ErrorBoundaries/str.js","components/MarkdownViewer.js","components/Block.js","components/CodeViewer.js"],"names":["ErrorCatcher","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","showErrorUI","error","errorInfo","children","react_default","a","createElement","style","color","PureComponent","NormalView","_this2","boom","setState","dataList","name","border","map","item","key","onClick","ErrorBoundaries","MarkdownViewer","text","Block","ErrorBoundaries_ErrorCatcher","ErrorBoundaries_NormalView","CodeViewer","codeString","__webpack_require__","d","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_markdown__WEBPACK_IMPORTED_MODULE_1__","react_markdown__WEBPACK_IMPORTED_MODULE_1___default","_ref","source","padding","marginBottom","react_syntax_highlighter_dist_esm_prism_light__WEBPACK_IMPORTED_MODULE_1__","react_syntax_highlighter_dist_esm_styles_prism__WEBPACK_IMPORTED_MODULE_2__","react_syntax_highlighter_dist_esm_languages_prism_jsx__WEBPACK_IMPORTED_MODULE_3__","PrismLight","registerLanguage","jsx","language","darcula"],"mappings":"6QAMMA,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,aAAa,GAHER,iFAcDS,EAAOC,qCAIhB,IACCF,EAAgBL,KAAKI,MAArBC,YACAG,EAAaR,KAAKJ,MAAlBY,SACR,OAAOH,EACLI,EAAAC,EAAAC,cAAA,MAAIC,MAAO,CAAEC,MAAO,QAApB,sEAEAL,qDAjB4BF,GAE9B,MAAO,CACLD,aAAa,UAXQS,iBA8BrBC,cACJ,SAAAA,EAAYnB,GAAO,IAAAoB,EAAA,OAAAlB,OAAAC,EAAA,EAAAD,CAAAE,KAAAe,IACjBC,EAAAlB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiB,GAAAZ,KAAAH,KAAMJ,KAMRqB,KAAO,WACLD,EAAKE,SAAS,CACZC,SAAU,QAPZH,EAAKZ,MAAQ,CACXe,SAAU,CAAC,CAAEC,KAAM,OAHJJ,wEAaV,IACCG,EAAanB,KAAKI,MAAlBe,SACR,OACEV,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAES,OAAQ,qBACnBF,EAASG,IAAI,SAAAC,GAAI,OAChBd,EAAAC,EAAAC,cAAA,QAAMa,IAAKD,EAAKH,MAAOG,EAAKH,QAE9BX,EAAAC,EAAAC,cAAA,2FACAF,EAAAC,EAAAC,cAAA,UAAQc,QAASzB,KAAKiB,MAAtB,sDAtBiBH,iBA4BZY,EAAkB,WAC7B,OACEjB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAgBC,KCnEG,gwCDoEnBnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,KACEpB,EAAAC,EAAAC,cAACmB,EAAD,KACErB,EAAAC,EAAAC,cAACoB,EAAD,OAEFtB,EAAAC,EAAAC,cAAA,kmBAKAF,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAYC,WC9BF,qhBD+BVxB,EAAAC,EAAAC,cAAA,kUAIAF,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAYC,WCpEF,+zBCdlBC,EAAAC,EAAAC,EAAA,sBAAAT,IAAA,IAAAU,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,IAAAO,EAAAP,EAAAK,EAAAC,GAGab,EAAiB,SAAAe,GAAA,IAAGd,EAAHc,EAAGd,KAAH,OAAcU,EAAA5B,EAAAC,cAAC8B,EAAA/B,EAAD,CAAeiC,OAAQf,sCCHnEM,EAAAC,EAAAC,EAAA,sBAAAP,IAAA,IAAAQ,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAEaR,EAAQ,SAAAa,GAAkB,IAAflC,EAAekC,EAAflC,SACtB,OACE8B,EAAA5B,EAAAC,cAAA,OACEC,MAAO,CACLS,OAAQ,kBACRuB,QAAS,OACTC,aAAc,SAGfrC,qCCXP0B,EAAAC,EAAAC,EAAA,sBAAAJ,IAAA,IAAAK,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAS,EAAAZ,EAAA,IAAAa,EAAAb,EAAA,KAAAc,EAAAd,EAAA,IAIAe,IAAWC,iBAAiB,MAAOC,KAE5B,IAAMnB,EAAa,SAAAU,GAAoB,IAAjBT,EAAiBS,EAAjBT,WAC3B,OACEK,EAAA5B,EAAAC,cAACmC,EAAA,EAAD,CAAYM,SAAS,MAAMxC,MAAOyC,KAC/BpB","file":"static/js/8.656147ff.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\nimport { MarkdownViewer } from \"../../components/MarkdownViewer\";\nimport { Block } from \"../../components/Block\";\nimport { CodeViewer } from \"../../components/CodeViewer\";\nimport { markdownText, code1, code2 } from \"./str\";\n\nclass ErrorCatcher extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showErrorUI: false\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    // 返回一个 state 值，用来渲染备用 UI\n    return {\n      showErrorUI: true\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // 这个生命周期函数中适合将错误上传至服务端\n  }\n\n  render() {\n    const { showErrorUI } = this.state;\n    const { children } = this.props;\n    return showErrorUI ? (\n      <h1 style={{ color: \"red\" }}>让一切看上去不那么白。</h1>\n    ) : (\n      children\n    );\n  }\n}\n\nclass NormalView extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataList: [{ name: \"1\" }]\n    };\n  }\n\n  boom = () => {\n    this.setState({\n      dataList: null\n    });\n  };\n\n  render() {\n    const { dataList } = this.state;\n    return (\n      <div style={{ border: \"1px solid tomato\" }}>\n        {dataList.map(item => (\n          <span key={item.name}>{item.name}</span>\n        ))}\n        <p>我是一个即将发生错误的组件</p>\n        <button onClick={this.boom}>点击我触发错误</button>\n      </div>\n    );\n  }\n}\n\nexport const ErrorBoundaries = () => {\n  return (\n    <div>\n      <MarkdownViewer text={markdownText} />\n      <Block>\n        <ErrorCatcher>\n          <NormalView />\n        </ErrorCatcher>\n        <p>\n          看上去我们好像是按了一下按钮，发生错误，那上文中提到错误边界是无法捕获事件处理中的错误的，实际上我们这里的错误并没有发生在事件处理函数中，我们在\n          onClick 中把原来的数组 赋值为 null, 导致 render 函数中的 dataList.map\n          方法出错。\n        </p>\n        <CodeViewer codeString={code2} />\n        <p>\n          文档中提到，如果一个组件中定义了 getDerivedStateFromError 或者是\n          componentDidCatch 生命周期函数中的任意一个，它就是一个错误边界组件。\n        </p>\n        <CodeViewer codeString={code1} />\n      </Block>\n    </div>\n  );\n};\n\nexport { ErrorBoundaries as default };\n","export const markdownText = `\n  参与工作中的项目开发的时候就感觉，前端并不流行错误处理，所以如果后端传过来的值有一点问题，整个网站就白了。\n  \n  如果用 TypeScript, 则可能会减少这种情况发生的几率；React 也提供了 错误边界 这个特性，在组件发生错误的时候，\n  \n  它可以拿出备用的 UI 页面，让一切看上去不那么白，不过文档也提到了，下面几种错误它是捕获不到的。\n  \n  * 事件处理\n  * 异步代码\n  * 服务端渲染\n  * 它自身抛出来的错误\n  \n  **注意：在开发环境下 create-react-app 仍然会显示错误堆栈的弹框，不过正式环境中不会。**\n`\nexport const code1 = `\nclass ErrorCatcher extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showErrorUI: false\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    // 返回一个 state 值，用来渲染备用 UI\n    return {\n      showErrorUI: true\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // 这个生命周期函数中适合将错误上传至服务端\n  }\n\n  render() {\n    const { showErrorUI } = this.state;\n    const { children } = this.props;\n    return showErrorUI ? (\n      <h1 style={{ color: \"red\" }}>让一切看上去不那么白。</h1>\n    ) : (\n      children\n    );\n  }\n}\n\n`\n\nexport const code2 = `\nclass NormalView extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataList: [{ name: \"1\" }]\n    };\n  }\n\n  boom = () => {\n    this.setState({\n      dataList: null\n    });\n  };\n\n  render() {\n    const { dataList } = this.state;\n    return (\n      <div>\n        {dataList.map(item => (\n          <span key={item.name}>{item.name}</span>\n        ))}\n        <button onClick={this.boom}>点击我触发错误</button>\n      </div>\n    );\n  }\n\n`","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\n\nexport const MarkdownViewer = ({ text }) => <ReactMarkdown source={text} />;\n","import React from \"react\";\n\nexport const Block = ({ children }) => {\n  return (\n    <div\n      style={{\n        border: \"1px solid black\",\n        padding: \"32px\",\n        marginBottom: \"20px\"\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n","import React from \"react\";\nimport PrismLight from \"react-syntax-highlighter/dist/esm/prism-light\";\nimport { darcula } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport jsx from \"react-syntax-highlighter/dist/esm/languages/prism/jsx\";\nPrismLight.registerLanguage(\"jsx\", jsx);\n\nexport const CodeViewer = ({ codeString }) => {\n  return (\n    <PrismLight language=\"jsx\" style={darcula}>\n      {codeString}\n    </PrismLight>\n  );\n};\n"],"sourceRoot":""}